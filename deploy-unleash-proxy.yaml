apiVersion: v1
kind: Namespace
metadata:
  name: ${K8S_NAMESPACE}

---
apiVersion: v1
kind: Service
metadata:
  name: uleash-porxy-service
  namespace: ${K8S_NAMESPACE}
spec:
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30007
      protocol: TCP
  type: NodePort
  selector:
    app: uleash-proxy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unleash-proxy-cm
data:
  UNLEASH_API_TOKEN: $UNLEASH_API_TOKEN
  UNLEASH_URL: $UNLEASH_URL
  UNLEASH_PROJECT_NAME: $UNLEASH_PROJECT_NAME
  UNLEASH_PROXY_CLIENT_KEYS: $UNLEASH_PROXY_CLIENT_KEYS
  UNLEASH_ENVIRONMENT: $UNLEASH_ENVIRONMENT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uleash-proxy-app
  namespace: ${K8S_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uleash-proxy
  template:
    metadata:
      labels:
        app: uleash-proxy
    spec:
      containers:
        - name: uleash-proxy
          image: docker.io/unleashorg/unleash-proxy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: UNLEASH_API_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: unleash-proxy-cm
                  key: UNLEASH_API_TOKEN
            - name: UNLEASH_URL
              valueFrom:
                configMapKeyRef:
                  name: unleash-proxy-cm
                  key: UNLEASH_URL
            - name: UNLEASH_PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  name: unleash-proxy-cm
                  key: UNLEASH_PROJECT_NAME
            - name: UNLEASH_PROXY_CLIENT_KEYS
              valueFrom:
                configMapKeyRef:
                  name: unleash-proxy-cm
                  key: UNLEASH_PROXY_CLIENT_KEYS
            - name: UNLEASH_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: unleash-proxy-cm
                  key: UNLEASH_ENVIRONMENT
